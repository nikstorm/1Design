Функции CSS

attr()
	Функция attr() применяется для добавления значения атрибута HTML-элемента в стилевое свойство.
	attr(<атрибут> <тип>? [, <значение>]?)
	.site::after {
    content: ' (' attr(href) ') ';
	<a href="http://htmlbook.ru" class="site">

blur()
	Функция blur() задаёт размытие по Гауссу изображений, фоновых картинок или текста. К элементу <body> напрямую применить размытие нельзя, только к его потомкам.
	filter: blur(<размер>);
	filter: blur(10px);

brightness()
	filter: brightness(<значение>);
	Функция brightness() понижает или повышает яркость изображений или фоновых картинок.
	filter: brightness(<значение>);
	Значение 100% или 1 оставляет изображение исходным. Любые значения меньше 100% (или меньше 1) понижают яркость изображения. Таким образом, 0 даёт полностью чёрную картинку. Значения больше 100% (или больше 1) повышают яркость изображения.
calc()
	спользуется для указания вычисляемого значения свойств, которые в качестве значений используют размер, угол, время, число. Это позволяет задавать значения основанные на сложении или вычитании разных единиц измерений, например можно задать 100% - 20px. Если значение не может быть вычислено, оно игнорируется.
	background-position: calc(100% - 20px) 0;
contrast()
	Функция contrast() понижает или повышает контрастность изображений или фоновых картинок.
	filter: contrast(<значение>);
	filter: contrast(1.5);
drop-shadow()
	Функция drop-shadow() добавляет тень к изображениям. В отличие от свойства box-shadow во внимание принимаются прозрачные участки в изображении и тень отбрасывается с их учётом.
	filter: drop-shadow(<сдвиг по x> <сдвиг по y> <радиус размытия> <цвет>);
	filter: drop-shadow(0 0 3px rgba(100,0,0,0.5));
grayscale()
	Функция grayscale() превращает изображение в чёрно-белое.
	filter: grayscale(<значение>);
	Значение 100% или 1 превращает изображение в чёрно-белое. Значение 0 оставляет изображение исходно цветным. Значения меньше 100% (или меньше 1) линейно меняют цветность картинки.
	
hue-rotate()
	Chrome до версии 53, Opera до версии 40 и Safari до версии 9.1 поддерживают свойство -webkit-filter.
	filter: hue-rotate(<угол>);
	В качестве значения указывается угол (к примеру: 45deg), который задаёт поворот оттенка на цветовом круге. 0 или 360 градусов оставляет изображение неизменным. Любые значения больше или меньше нуля производят сдвиг цвета в изображении.Пустое значение воспринимается как 0deg.
	filter: hue-rotate(30deg);
invert()
	Функция invert() инвертирует цвета в изображении. По своему действию похоже на превращение фотографии в негатив.
	Значение 0 оставляет изображение исходным. Значение 100% или 1 полностью инвертирует цвета картинки. Значения от 0% до 100% или от 0 до 1 инвертируют цвета частично.Отрицательное значение не допускается. Пустое значение воспринимается как 0.
linear-gradient()
	Функция linear-gradient() добавляет линейный градиент к фону элемента. Она выступает значением свойства background-image или background.
	background-image: linear-gradient([<угол> | to <позиция>]?, <цвет> [, <цвет>]*);
	<цвет>
	Представляет собой значение цвета (см. цвет), за которым идёт необязательная позиция цвета относительно оси градиента, она задаётся в процентах от 0% до 100% или в любых других подходящих для CSS единицах.
	<позиция>
	Для записи позиции вначале пишется to, а затем добавляются ключевые слова top, bottom и left, right, а также их сочетания. Порядок слов не важен, можно написать to left top или to top left. В табл. 1 приведены разные позиции и тип получаемого градиента для цветов #fff и #000, по другому от белого к чёрному.
	to top	0deg	Снизу вверх.	
	to left	270deg 	-90deg	Справа налево.	
	to bottom	180deg	Сверху вниз.	
	to right	90deg 	-270deg	Слева направо.	
	to top left	 	От правого нижнего угла к левому верхнему.	
	to top right	 	От левого нижнего угла к правому верхнему.	
	to bottom left	 	От правого верхнего угла к левому нижнему.	
	to bottom right	 	От левого верхнего угла к правому нижнему.
opacity()
	Функция opacity() задаёт степень прозрачности изображений. По своему действию похожа на свойство opacity, но некоторые браузеры для фильтров применяют аппаратное ускорение, чтобы повысить их производительность.
	
radial-gradient()
	Функция radial-gradient() добавляет радиальный градиент к фону элемента. Радиальные по своему принципу похожи на линейные градиенты, но один цвет переходит в другой не вдоль прямой линии, а словно круги по воде вокруг точки. На рис. 1 представлено для сравнения одновременно два разных градиента: радиальный (рис. 1а) и линейный (рис. 1б).
	Радиальный градиент создаётся с помощью свойства background или background-image.
	background-image: radial-gradient([ circle || <радиус> ] [ at <позиция> ]? ,
   | [ ellipse || [<радиус> | <проценты> ]{2}] [ at <позиция> ]? ,
   | [ [ circle | ellipse ] || <размер> ] [ at <позиция> ]? ,
   | at <позиция> ,
     <цвет> [ , <цвет> ]*)
	 circle
		Радиальный градиент круглой формы.
	ellipse
		Создаёт градиент эллиптической формы. Эта форма установлена по умолчанию.
	<радиус>
		Радиус градиента в доступных для CSS единицах. Одно значение указывает радиус круга, два значения — радиус эллипса по оси x и его же радиус по оси y. Если радиус явно не указан, градиент будет заполнять собой весь фон элемента.
	<позиция>
	Задаёт начальную точку откуда исходит градиент. Позиция точки пишется аналогично значениям свойства background-position с помощью ключевых слов или доступных единиц измерения вроде пикселей или процентов; ниже приведены возможные сочетания.

top left = left top = 0% 0% (в левом верхнем углу);
top = top center = center top = 50% 0% (по центру вверху);
right top = top right = 100% 0% (в правом верхнем углу);
left = left center = center left = 0% 50% (по левому краю и по центру);
center = center center = 50% 50% (по центру) — это значение по умолчанию;
right = right center = center right = 100% 50% (по правому краю и по центру);
bottom left = left bottom = 0% 100% (в левом нижнем углу);
bottom = bottom center = center bottom = 50% 100% (по центру внизу);
bottom right = right bottom = 100% 100% (в правом нижнем углу).
<цвет>
Представляет собой значение цвета (см. цвет), за которым идёт необязательная позиция цвета относительно оси градиента, она задаётся в процентах от 0% до 100% или в любых других подходящих для CSS единицах.
<размер>
Устанавливает размер градиента. В табл. 1 перечислены возможные значения размера с их описанием и результатом для белого и чёрного цвета. Код и вид дан для кругового и эллиптического градиента.

repeating-linear-gradient()
	Создаёт бесконечно повторяющийся линейный градиент, образуя тем самым фоновый узор. По своему действию похожа на функцию linear-gradient() и имеет те же параметры. При этом цвета последовательно сменяют друг друга, после последнего цвета в списке цветов градиента сразу же идёт первый.
	background-image: repeating-linear-gradient([<угол> | to <позиция> ,] <цвет> [, <цвет>]*);
	<угол>
		Задаёт угол наклона градиентной линии, который показывает направление градиента. Вначале пишется положительное или отрицательное значение угла, затем к нему слитно добавляется deg.

		Нулю градусов (или 360º) соответствует градиент снизу вверх, далее отсчёт ведётся по часовой стрелке. Отсчёт угла наклона градиентной линии показан ниже.

Угол

	<цвет>
		Представляет собой значение цвета (см. цвет), за которым идёт необязательная позиция цвета относительно оси градиента, она задаётся в процентах от 0% до 100% или в любых других подходящих для CSS единицах.
	<позиция>
		Для записи позиции вначале пишется to, а затем добавляются ключевые слова top, bottom и left, right, а также их сочетания. Порядок слов не важен, можно написать to left top или to top left. В табл. 1 приведены разные позиции и тип получаемого градиента для цветов #000 и #fff, по другому от чёрного к белому.
repeating-radial-gradient()
	По своему действию похож на радиальный градиент, который делается функцией radial-gradient(), и имеет с ним схожий синтаксис. Но цвета градиента бесконечно повторяются во всех направлениях образуя узор, заполняющий фон элемента.
	background-image: repeating-radial-gradient([ circle || <радиус> ] [ at <позиция> ]? ,
   | [ ellipse || [<радиус> | <проценты> ]{2}] [ at <позиция> ]? ,
   | [ [ circle | ellipse ] || <размер> ] [ at <позиция> ]? ,
   | at <позиция> ,
     <цвет> [ , <цвет> ]*)
	Значения

circle Радиальный градиент круглой формы.
ellipse Создаёт градиент эллиптической формы. Эта форма установлена по умолчанию.
<радиус> Радиус градиента в доступных для CSS единицах. Одно значение указывает радиус круга, два значения — радиус эллипса по оси x и его же радиус по оси y. Если радиус явно не 	указан, градиент будет заполнять собой весь фон элемента.
<позиция> Задаёт начальную точку откуда исходит градиент. Позиция точки пишется аналогично значениям свойства background-position с помощью ключевых слов или доступных единиц измерения вроде пикселей или процентов; ниже приведены возможные сочетания.

	top left = left top = 0% 0% (в левом верхнем углу);
	top = top center = center top = 50% 0% (по центру вверху);
	right top = top right = 100% 0% (в правом верхнем углу);
	left = left center = center left = 0% 50% (по левому краю и по центру);
	center = center center = 50% 50% (по центру) — это значение по умолчанию;
	right = right center = center right = 100% 50% (по правому краю и по центру);
	bottom left = left bottom = 0% 100% (в левом нижнем углу);
	bottom = bottom center = center bottom = 50% 100% (по центру внизу);
	bottom right = right bottom = 100% 100% (в правом нижнем углу).
<цвет> Представляет собой значение цвета (см. цвет), за которым идёт необязательная позиция цвета относительно оси градиента, она задаётся в процентах от 0% до 100% или в любых других подходящих для CSS единицах.
<размер> Устанавливает размер градиента. В табл. 1 перечислены возможные значения размера с их описанием и результатом для белого и чёрного цвета. Код и вид дан для кругового и эллиптического градиента.
Табл. 1. Ключевые слова для изменения размера градиента
Значение	Код	Описание	Вид
closest-side background: radial-gradient(circle closest-side at 30px 20px, #fff, #000);

			background: radial-gradient(closest-side at 30px 20px, #fff, #000);
Градиент совпадает с ближайшей к нему стороной блока (для круга) или одновременно совпадает с ближайшими горизонтальными и вертикальными сторонами (для эллипса).	contain

closest-corner background: radial-gradient(circle closest-corner at 30px 20px, #fff, #000);

				background: radial-gradient(closest-corner at 30px 20px, #fff, #000);

Форма градиента вычисляется на основании информации о расстоянии до ближайшего угла блока.	

closest-corner

farthest-side	background: radial-gradient(circle farthest-side at 30px 20px, #fff, #000);

				background: radial-gradient(farthest-side at 30px 20px, #fff, #000);

Похож по своему действию на closest-side, но градиент распространяется до дальней стороны блока.	
farthest-side
farthest-corner	
background: radial-gradient(circle farthest-corner at 30px 20px, #fff, #000);

background: radial-gradient(farthest-corner at 30px 20px, #fff, #000);

Форма градиента вычисляется на основании информации о расстоянии до дальнего угла блока,
	 
saturate()
	Функция saturate() изменяет насыщенность цветов в изображении.
	filter: saturate(<значение>);
	
	Значение 0% или 0 полностью убирает насыщенность цветов в изображении, превращая его в чёрно-белое. Значение 100% или 1 оставляет изображение неизменным. Любые значения больше 100% или больше 1 делают цвета в изображении более насыщенными.
	Отрицательное значение не допускается. Пустое значение воспринимается как 1.

sepia()
	Функция sepia() превращает изображение в сепию — так называется чёрно-белое изображение с коричневым оттенком. Сепия придаёт фотографиям старинный вид.

	Синтаксис 

	filter: sepia(<значение>);
	
	Значение 0% или 0 оставляет изображение неизменным. Значение 100% или 1 полностью превращает изображение в сепию. Любые значения от 0% до 100% или от 0 до 1 линейно применяют эффект.Отрицательное значение не допускается. Пустое значение воспринимается как 0.
	

















	